version: '3.7'

services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.3
    environment:
      - bootstrap.memory_lock=true
      - cluster.name=docker-cluster
      - cluster.routing.allocation.disk.threshold_enabled=false
      - discovery.type=single-node
      - ES_JAVA_OPTS=-XX:UseAVX=2 -Xms1g -Xmx1g
    ulimits:
      memlock:
        hard: -1
        soft: -1
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    healthcheck:
      interval: 20s
      retries: 10
      test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'

  kibana:
    image: docker.elastic.co/kibana/kibana:7.16.3
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - 5601:5601
    healthcheck:
      interval: 10s
      retries: 20
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:5601/api/status
  
  apm-server:
    image: docker.elastic.co/apm/apm-server:7.16.3
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy
    cap_add: ["CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID"]
    cap_drop: ["ALL"]
    ports:
    - 8200:8200
    command: >
       apm-server -e
         -E apm-server.rum.enabled=true
         -E setup.kibana.host=kibana:5601
         -E setup.template.settings.index.number_of_replicas=0
         -E apm-server.kibana.enabled=true
         -E apm-server.kibana.host=kibana:5601
         -E output.elasticsearch.hosts=["elasticsearch:9200"]
    healthcheck:
      interval: 10s
      retries: 12
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8200/

  db:
    image: postgres
    restart: always
    ports:
        - "5432:5432"
    environment:
        - POSTGRES_USER=sa
        - POSTGRES_PASSWORD=zcommerce
        - POSTGRES_DB=commerce
        - PGDATA=/data/postgres
    volumes:
      - postgres:/data/postgres  

  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: zeihanaulia@gmail.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin

  order:
    build:
      context: .
      dockerfile: "./deployments/docker/order/Dockerfile"
    restart: always
    command: order-rest
    environment: 
        - DB_MASTER_DSN=pgsql:host=db;port=5432;dbname=commerce;user=sa;password=zcommerce
        - DB_REPLICA_DSN=pgsql:host=db;port=5432;dbname=commerce;user=sa;password=zcommerce
        - ELASTIC_APM_SERVICE_NAME=order-service
        - ELASTIC_APM_SERVER_URL=http://apm-server:8200
    depends_on:
      - db
    ports: 
        - "8002:8002"
        # - "7070:7070" # metrics

  payment:
    build:
      context: .
      dockerfile: "./deployments/docker/payment/Dockerfile"
    restart: always
    command: payment-rest
    environment: 
        - DB_MASTER_DSN=pgsql:host=db;port=5432;dbname=commerce;user=sa;password=zcommerce
        - DB_REPLICA_DSN=pgsql:host=db;port=5432;dbname=commerce;user=sa;password=zcommerce
        - ELASTIC_APM_SERVICE_NAME=payment-service
        - ELASTIC_APM_SERVER_URL=http://apm-server:8200
    depends_on:
      - db
    ports: 
        - "8003:8003"
        # - "7070:7070" # metrics

  account:
    build:
      context: .
      dockerfile: "./deployments/docker/account/Dockerfile"
    restart: always
    command: account-rest
    environment: 
        - DB_MASTER_DSN=pgsql:host=db;port=5432;dbname=commerce;user=sa;password=zcommerce
        - DB_REPLICA_DSN=pgsql:host=db;port=5432;dbname=commerce;user=sa;password=zcommerce
    depends_on:
      - db
    ports: 
        - "8004:8004"
        # - "7070:7070" # metrics

volumes:
  postgres:
  pgadmin:
  elasticsearch: